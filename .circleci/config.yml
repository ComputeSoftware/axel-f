defaults: &defaults
  docker:
    - image: clojure:tools-deps
  working_directory: ~/repo

version: 2
jobs:
  checkout_code:
    <<: *defaults
    steps:
      - checkout
      - run: mkdir -p workspace
      - save_cache:
          key: v1-repo-{{ .Branch }}-{{ .Revision }}
          paths:
            - ~/repo

  test-1.9:
    <<: *defaults
    steps:

      - restore_cache:
          key: v1-repo-{{ .Branch }}-{{ .Revision }}

      - restore_cache:
          key: 1.9-{{ checksum "deps.edn" }}

      - run:
          name: Test with clojure 1.9
          type: shell
          command: |
            clojure -A:1.9:test:clj-runner

      - save_cache:
          paths:
            - ~/.m2
          key: 1.9-{{ checksum "deps.edn" }}

  test-1.10:
    <<: *defaults
    steps:

      - restore_cache:
          key: v1-repo-{{ .Branch }}-{{ .Revision }}

      - restore_cache:
          key: 1.10-{{ checksum "deps.edn" }}

      - run:
          name: Test with clojure 1.10-master
          type: shell
          command: |
            clojure -A:master:test:clj-runner

      - save_cache:
          paths:
            - ~/.m2
          key: 1.10-{{ checksum "deps.edn" }}

  test-js:
    <<: *defaults
    steps:

      - restore_cache:
          key: v1-repo-{{ .Branch }}-{{ .Revision }}

      - restore_cache:
          key: cljs-{{ checksum "deps.edn" }}

      - run:
          name: Install NodeJS
          type: shell
          command: |
            apt-get update
            curl -sL https://deb.nodesource.com/setup_10.x | bash -
            apt-get install -y build-essential nodejs

      - run:
          name: Test clojurescript
          type: shell
          command: |
            clojure -A:cljs:test:cljs-runner

      - save_cache:
          paths:
            - ~/.m2
          key: cljs-{{ checksum "deps.edn" }}

  cljs-package-build:
    <<: *defaults
    steps:

      - checkout

      - restore_cache:
          key: cljs-{{ checksum "deps.edn" }}

      - run: mkdir -p workspace

      - run:
          name: Build JavaScript bundle
          type: shell
          command: |
            clojure -A:cljs -m cljs.main -co axel_f.min.js.edn --compile

      - run:
          name: Prepare workspace for publishing
          type: shell
          command: |
            cp js/min/axel_f.min.js workspace/axel_f.js
            cp release-js/* workspace/

      - persist_to_workspace:
          root: workspace
          paths:
            - axel_f.js
            - package.json
            - README.md

      - save_cache:
          paths:
            - ~/.m2
          key: cljs-{{ checksum "deps.edn" }}

  clojars-deploy:
    <<: *defaults
    docker:
      - image: circleci/openjdk:8-jdk-node-browsers
    steps:

      - checkout

      - restore_cache:
          key: maven-{{ checksum "pom.xml" }}

      - run:
          name: Build and deploy to clojars
          type: shell
          command: |
            mvn -s .m2/settings.xml deploy

      - save_cache:
          paths:
            - ~/.m2
          key: maven-{{ checksum "pom.xml" }}

  npm-deploy:
    <<: *defaults
    docker:
      - image: circleci/node:10
    steps:

      - attach_workspace:
          at: ~/workspace

      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc

      - run:
          name: Publish npm package
          type: shell
          command: |
            cd ~/workspace
            npm publish

workflows:
  version: 2
  build:
    jobs:
      - checkout_code:
          filters:
            tags:
              only: /.*/
      - test-1.9:
          filters:
            tags:
              only: /.*/
          requires:
            - checkout_code
      - test-1.10:
          filters:
            tags:
              only: /.*/
          requires:
            - checkout_code
      - test-js:
          filters:
            tags:
              only: /.*/
          requires:
            - checkout_code
      - cljs-package-build:
          filters:
            tags:
              only: /.*/
          requires:
            - test-js
      - clojars-deploy:
          filters:
            tags:
              only: /.*/
            branches:
              only: master
          requires:
            - test-1.9
            - test-1.10
            - cljs-package-build
      - npm-deploy:
          filters:
            tags:
              only: /.*/
            branches:
              only: master
          requires:
            - test-1.9
            - test-1.10
            - cljs-package-build
